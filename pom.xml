<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<version>20-SNAPSHOT</version>

	<!-- The groupId defines the group for this project Core-Projects goes to 
		"de.braintags" Features goes to "de.braintags.feature" Applications goes 
		to "de.braintags.apps" -->
	<groupId>de.braintags</groupId>
	<!-- The artifactId is the name of this project. It will be used for naming 
		the jar too -->
	<artifactId>btVertxBasePOM</artifactId>
	<!-- The version of this project Append "-SNAPSHOT" to version make it a 
		snapshot -->
	<!-- Packaging is the type of this project "pom" = This Project is only 
		a configuring project with no real jar or else "jar" = This Project will 
		be build a jar -->
	<packaging>pom</packaging>

	<!-- Human readable name of this project -->
	<name>Braintags Vert.x Parent</name>

	<!-- Short Information about the company -->
	<organization>
		<name>Braintags GmbH</name>
		<url>http://www.braintags.de</url>
	</organization>
	<description>POM for all braintags projects, which are using vert.x</description>
	<url>https://github.com/BraintagsGmbH/BtVertxBase</url>

	<licenses>
		<license>
			<name>Eclipse Public License - v 1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<parent>
		<groupId>io.vertx</groupId>
		<artifactId>vertx-ext-parent</artifactId>
		<version>23</version>
	</parent>

	<properties>
		<!-- JACOCO -->
		<jacoco.minimum>0.60</jacoco.minimum>
		<jacoco.haltOnFailure>false</jacoco.haltOnFailure>
		<ignoreFailedTests>false</ignoreFailedTests>

		<!-- Skipping sonar qube? -->
		<sonar.skip>true</sonar.skip>
		<sonar.language>java</sonar.language>
		<sonar.host.url>http://sqube.bt-rz.net</sonar.host.url>
    	<sonar.projectKey>${project.groupId}.vertx:${project.artifactId}</sonar.projectKey>
    	<sonar.language>java</sonar.language>
    	<sonar.useWsCache>true</sonar.useWsCache>

		<testjar.skip>true</testjar.skip>
		<maven.test.skip>true</maven.test.skip>
		<!-- We skip sources jar generation as we do it with the assembly plugin 
			to have greater control over the content -->
		<source.skip>true</source.skip>
		<doc.skip>true</doc.skip>
		<jsdoc.skip>true</jsdoc.skip>

		<!-- signing can be switched off for SNAPSHOT -->
		<sign.skip>false</sign.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Compiler plugin -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<javadocSourceFileInclude>de/braintags/**/*.java</javadocSourceFileInclude>
		<asciidoc.dir>${project.basedir}/src/docs/asciidoc</asciidoc.dir>
		
		<!-- license properties -->
		<license.canUpdateDescription>false</license.canUpdateDescription>
		<license.canUpdateCopyright>false</license.canUpdateCopyright>
		<license.canUpdateLicense>false</license.canUpdateLicense>
		<license.dryRun>false</license.dryRun>

		<!-- VERSIONS -->
		<bt.vertx.version>1.4.0-SNAPSHOT</bt.vertx.version>
		<stack.version>3.4.0-SNAPSHOT</stack.version>
		
		<sonar-jacoco-listeners>3.8</sonar-jacoco-listeners>
		<jacoco.version>0.7.7.201606060606</jacoco.version>
		<sonar.java.source>1.8</sonar.java.source>
		<sonar-maven-plugin>3.0.1</sonar-maven-plugin>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
		<maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
		<log4j.version>1.2.17</log4j.version>
		<license-maven-plugin>1.12</license-maven-plugin>

	</properties>

	<dependencyManagement>
	<!-- third party -->
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-dependencies</artifactId>
				<version>${stack.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-mongo-service</artifactId>
				<scope>test</scope>
				<classifier>tests</classifier>
				<version>${stack.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>${sonar-jacoco-listeners}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

<!-- braintags -->
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-util</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-util</artifactId>
				<version>${bt.vertx.version}</version>
				<classifier>tests</classifier>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-key-generator</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-key-generator</artifactId>
				<version>${bt.vertx.version}</version>
				<classifier>tests</classifier>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojo-mapper-common</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojo-mapper-json</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojo-mapper-mysql</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojongo</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojo-mapper-common-test</artifactId>
				<version>${bt.vertx.version}</version>
			</dependency>
			<dependency>
				<groupId>de.braintags</groupId>
				<artifactId>vertx-pojo-mapper-json</artifactId>
				<classifier>tests</classifier>
				<version>${bt.vertx.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-codegen</artifactId>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-docgen</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-codetrans</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-groovy</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-kotlin</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-ruby</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-js</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-rx-java</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<skip>${sign.skip}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<!-- implementation is needed only for Maven 2 -->
						<rule implementation="org.jacoco.maven.RuleConfiguration">
							<element>BUNDLE</element>
							<excludes>
								<exclude>*Test*</exclude>
							</excludes>
							<limits>
								<!-- implementation is needed only for Maven 2 -->
								<limit implementation="org.jacoco.report.check.Limit">
									<counter>COMPLEXITY</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.60</minimum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>
			</plugin>
 				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin}</version>
					<configuration>
						<licenseName>epl_only_v1</licenseName>
						<licenseResolver>${project.baseUri}/src/license</licenseResolver>
						<organizationName>Braintags GmbH</organizationName>
						<inceptionYear>2017</inceptionYear>
						<canUpdateDescription>${license.canUpdateDescription}</canUpdateDescription>
						<canUpdateCopyright>${license.canUpdateCopyright}</canUpdateCopyright>
						<canUpdateLicense>${license.canUpdateLicense}</canUpdateLicense>
						<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
						<dryRun>${license.dryRun}</dryRun>
						<roots>
							<root>src/main/java</root>
							<root>src/test</root>
						</roots>
					</configuration>
					<executions>
						<execution>
							<id>updateLicense</id>
							<phase>process-sources</phase>
							<goals>
								<goal>update-file-header</goal>
							</goals>
							<inherited>true</inherited>
							<configuration>
					             <excludes>
					                <exclude>package-info.java</exclude>
					              </excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<!-- Remove impl and keep only io/vertx files (no examples or docoverride) -->
					<configuration>
						<additionalparam>-Xdoclint:none</additionalparam>
						<sourceFileExcludes>
							<sourceFileExclude>**/package-info.java</sourceFileExclude>
							<sourceFileExclude>**/impl/**</sourceFileExclude>
						</sourceFileExcludes>
						<sourceFileIncludes>
							<sourceFileInclude>${javadocSourceFileInclude}</sourceFileInclude>
						</sourceFileIncludes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<optimize>true</optimize>
						<compilerArgument>-XDignore.symbol.file</compilerArgument>
						<compilerArgs>
							<arg>-XDignore.symbol.file</arg>
						</compilerArgs>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<!-- Testing shall be executed by one Suites, which are calling each 
							other test class -->
						<includes>
							<include>**/TestAll*.java</include>
						</includes>
						<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
						<systemPropertyVariables>
							<io.netty.leakDetectionLevel>PARANOID</io.netty.leakDetectionLevel>
							<mailClientUserName>${mailClientUserName}</mailClientUserName>
							<mailClientPassword>${mailClientPassword}</mailClientPassword>
						</systemPropertyVariables>
						<testFailureIgnore>${ignoreFailedTests}</testFailureIgnore>
						<argLine>@{argLine} -server -Xmx1200M</argLine>
						<forkCount>1</forkCount>
						<reuseForks>false</reuseForks>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- https://github.com/BraintagsGmbH/BtVertxBase.git -->
	<scm>
		<connection>scm:git:git@github.com:BraintagsGmbH/BtVertxBase.git</connection>
		<developerConnection>scm:git:git@github.com:BraintagsGmbH/BtVertxBase.git</developerConnection>
		<url>git@github.com:BraintagsGmbH/BtVertxBase.git</url>
	</scm>

	<profiles>
		<profile>
			<id>sonatype-oss-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-no-vertx-snapshots</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireReleaseDeps>
											<message>No Vert.x Snapshots Allowed during a release!</message>
											<includes>
												<include>de.braintags.io.vertx:*</include>
											</includes>
										</requireReleaseDeps>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
